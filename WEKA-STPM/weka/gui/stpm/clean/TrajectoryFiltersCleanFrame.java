/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TrajectoryFiltersClean.java
 *
 * Created on 03/06/2010, 18:39:48
 */
package weka.gui.stpm.clean;

import weka.gui.stpm.*;
import javax.swing.JOptionPane;

/**
 *
 * @author hercules
 */
public class TrajectoryFiltersCleanFrame extends javax.swing.JFrame {

    private TrajectoryClean trajectoryClean;

    /** Creates new form TrajectoryFiltersClean */
    public TrajectoryFiltersCleanFrame(TrajectoryClean trajectoryClean) {
        this.trajectoryClean = trajectoryClean;
        initComponents();
        initEspecifics();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jButtonFiltrar = new javax.swing.JButton();
        jLabelMensagem = new javax.swing.JLabel();
        jLabelNmTabela = new javax.swing.JLabel();
        jLabelnmTabelas = new javax.swing.JLabel();
        jTextFieldPorcentagem = new javax.swing.JTextField();
        jLabelPordentagem = new javax.swing.JLabel();
        jLabelPorcentagem = new javax.swing.JLabel();
        jLabelQuantoPontos = new javax.swing.JLabel();
        jLabelGostariaRetirar = new javax.swing.JLabel();
        jTextFieldQtdePontos = new javax.swing.JTextField();
        jLabelVelocidadeMaxima = new javax.swing.JLabel();
        jTextFieldVElcidadeMaxima = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("TrajectoryCleaning");
        setForeground(java.awt.Color.white);
        setName("TrajectoryClean"); // NOI18N

        jButtonFiltrar.setText("Clean");
        jButtonFiltrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButtonFiltrarMousePressed(evt);
            }
        });
        jButtonFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrarActionPerformed(evt);
            }
        });

        jLabelMensagem.setText(" ");

        jLabelNmTabela.setText("Trajectories to be cleaned:");

        jLabelnmTabelas.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabelnmTabelas.setText(" ");

        jTextFieldPorcentagem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldPorcentagemFocusLost(evt);
            }
        });

        jLabelPordentagem.setText("%");

        jLabelPorcentagem.setText("Percentage of cleaning :         ");

        jLabelQuantoPontos.setText("How many points would   ");

        jLabelGostariaRetirar.setText("you like to discard ?");

        jTextFieldQtdePontos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldQtdePontosFocusLost(evt);
            }
        });

        jLabelVelocidadeMaxima.setText("Max. Speed(noise) :");

        jTextFieldVElcidadeMaxima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldVElcidadeMaximaActionPerformed(evt);
            }
        });
        jTextFieldVElcidadeMaxima.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldVElcidadeMaximaFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelNmTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelnmTabelas, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelGostariaRetirar, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelQuantoPontos, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPorcentagem, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(jLabelVelocidadeMaxima))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldPorcentagem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(jTextFieldQtdePontos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                    .addComponent(jTextFieldVElcidadeMaxima, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelPordentagem)
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addComponent(jButtonFiltrar)
                .addGap(116, 116, 116))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNmTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelnmTabelas, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldVElcidadeMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelVelocidadeMaxima))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldQtdePontos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelQuantoPontos, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabelGostariaRetirar, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPorcentagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPorcentagem)
                    .addComponent(jLabelPordentagem))
                .addGap(18, 18, 18)
                .addComponent(jLabelMensagem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrarActionPerformed
        // TODO add your handling code here:
        eventoFiltrarMousePressed();
    }//GEN-LAST:event_jButtonFiltrarActionPerformed

    private void jButtonFiltrarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonFiltrarMousePressed
        
    }//GEN-LAST:event_jButtonFiltrarMousePressed

    private void jTextFieldVElcidadeMaximaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldVElcidadeMaximaFocusLost
        eventoFocusLostVelocidadeMedia();
    }//GEN-LAST:event_jTextFieldVElcidadeMaximaFocusLost

    private void jTextFieldVElcidadeMaximaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldVElcidadeMaximaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldVElcidadeMaximaActionPerformed

    private void jTextFieldQtdePontosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldQtdePontosFocusLost
        eventoFocusLostQtdadePontos();
    }//GEN-LAST:event_jTextFieldQtdePontosFocusLost

    private void jTextFieldPorcentagemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldPorcentagemFocusLost
        eventoFocusLostPorcentagem();
    }//GEN-LAST:event_jTextFieldPorcentagemFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonFiltrar;
    private javax.swing.JLabel jLabelGostariaRetirar;
    private javax.swing.JLabel jLabelMensagem;
    private javax.swing.JLabel jLabelNmTabela;
    private javax.swing.JLabel jLabelPorcentagem;
    private javax.swing.JLabel jLabelPordentagem;
    private javax.swing.JLabel jLabelQuantoPontos;
    private javax.swing.JLabel jLabelVelocidadeMaxima;
    private javax.swing.JLabel jLabelnmTabelas;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField jTextFieldPorcentagem;
    private javax.swing.JTextField jTextFieldQtdePontos;
    private javax.swing.JTextField jTextFieldVElcidadeMaxima;
    // End of variables declaration//GEN-END:variables




    private Double eventoFocusLostPorcentagem(){
        Double porcetagem = null;
        try {
            porcetagem = (Double.parseDouble(this.jTextFieldPorcentagem.getText()));
        } catch (Exception e) {
            porcetagem=null;
            this.jTextFieldPorcentagem.setText("");
            e.printStackTrace();
        }
        return porcetagem;
    }

    private Integer eventoFocusLostQtdadePontos(){
        Integer qtdePonto = null;
        try {
            qtdePonto = (Integer.parseInt(this.jTextFieldQtdePontos.getText()));
        } catch (Exception e) {
            qtdePonto=null;
            this.jTextFieldQtdePontos.setText("");
            e.printStackTrace();
        }
        return qtdePonto;
    }


    private Double eventoFocusLostVelocidadeMedia(){
        Double veloc = null;
        try {
//            this.jFormattedTextFieldVElcidadeMaxima.commitEdit();
            //veloc = ((Long) this.jFormattedTextFieldVElcidadeMaxima.getValue()).doubleValue();
            veloc = (Double.parseDouble(this.jTextFieldVElcidadeMaxima.getText()));
            
        } catch(NullPointerException np){
            veloc=null;
//            this.jFormattedTextFieldVElcidadeMaxima.setText("");
//            this.jFormattedTextFieldVElcidadeMaxima.setValue(null);
            this.jTextFieldVElcidadeMaxima.setText("");
            np.printStackTrace();
        } catch (Exception e) {
            veloc=null;
//            this.jFormattedTextFieldVElcidadeMaxima.setText("");
//            this.jFormattedTextFieldVElcidadeMaxima.setValue(null);
            this.jTextFieldVElcidadeMaxima.setText("");
            e.printStackTrace();
        }
        return veloc;
    }


    private void eventoFiltrarMousePressed() {
////        JOptionPane.showMessageDialog(this, "Porcentagem Text= "+this.jFormattedTextFieldPorcentagem.getText()+
////                "Porcentagem Value= "+this.jFormattedTextFieldPorcentagem.getValue());
//
        Double veloc = null;
        Double tempo = null;
        Double porcent = null;
        Integer qtdePonto = null;

        veloc       = eventoFocusLostVelocidadeMedia();
        porcent     = eventoFocusLostPorcentagem();
        qtdePonto   = eventoFocusLostQtdadePontos();
//
//        try {
////            this.jFormattedTextFieldVElcidadeMaxima.commitEdit();
//            veloc = ((Long) this.jFormattedTextFieldVElcidadeMaxima.getValue()).doubleValue();
//        } catch(NullPointerException np){
//            veloc=null;
//            this.jFormattedTextFieldVElcidadeMaxima.setText("");
//            this.jFormattedTextFieldVElcidadeMaxima.setValue(null);
//            np.printStackTrace();
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
////        try {
//////            this.jFormattedTextFieldTempo.commitEdit();
////            tempo = ((Long) this.jFormattedTextFieldTempo.getValue()).doubleValue();
////        } catch(NullPointerException np){
////        }  catch (Exception e) {
////            e.printStackTrace();
////        }
//
//        try {
////            this.jFormattedTextFieldPorcentagem.commitEdit();
//            porcent = ((Long) this.jFormattedTextFieldPorcentagem.getValue()).doubleValue();
//        }  catch(NullPointerException np){
//            this.jFormattedTextFieldPorcentagem.setText("");
//            this.jFormattedTextFieldPorcentagem.setValue(null);
//            porcent=null;
//            np.printStackTrace();
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//        try {
////            this.jFormattedTextFieldQtdePontos.commitEdit();
//            qtdePonto = ((Long)this.jFormattedTextFieldQtdePontos.getValue()).intValue();
//        } catch(NullPointerException np){
//            this.jFormattedTextFieldQtdePontos.setText("");
//            this.jFormattedTextFieldQtdePontos.setValue(null);
//            qtdePonto=null;
//            np.printStackTrace();
//        } catch (Exception e) {
//            e.printStackTrace();
//        }

        if(qtdePonto==null && porcent==null && tempo==null && veloc==null){
            JOptionPane.showMessageDialog(this, "Pelo menos um filtro deve ser informado.");
            return;
        }

        this.trajectoryClean.getFilterClean().setVelocidadeMaxima(veloc);
        this.trajectoryClean.getFilterClean().setTempoMaximo(tempo);
        this.trajectoryClean.getFilterClean().setQtdePontos(qtdePonto);
        this.trajectoryClean.getFilterClean().setPorcentagem(porcent);

        this.trajectoryClean.filtrarTrajetoria();

    }

    private void initEspecifics() {
        this.jLabelMensagem.setText("");
        this.jLabelnmTabelas.setText(this.trajectoryClean.getFilterClean().getListNomeTabelasStr());
    }
}
